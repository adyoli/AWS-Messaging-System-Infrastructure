name: Deploy Messaging System Infrastructure

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  terraform:
    name: "Terraform CI/CD"
    runs-on: ubuntu-latest
    env:
      # This is a best practice for non-interactive runs
      TF_IN_AUTOMATION: true
      # Pass DB password as a secret
      TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false -var-file="terraform.tfvars"

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false -var-file="terraform.tfvars"

      - name: Run Post-Deploy Health Check
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: |
          pip install requests
          URL=$($TERRAFORM_CLI_PATH/terraform-bin output -raw alb_dns_name)
          echo "ALB URL: $URL"
          python scripts/health_check.py "http://$URL"

      - name: Build Docker image
        run: docker build -t my-echo-app .

      - name: Set up Docker tags
        id: docker_tags
        run: |
          echo "REPO=863518437902.dkr.ecr.us-east-1.amazonaws.com/bonmoja-assessment-repo" >> $GITHUB_ENV
          echo "SHA_TAG=$(echo $GITHUB_SHA | head -c 7)" >> $GITHUB_ENV

      - name: Login to Amazon ECR
        env:
          AWS_REGION: us-east-1
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ env.REPO }}

      - name: Tag Docker image (latest)
        run: docker tag my-echo-app:latest ${{ env.REPO }}:latest

      - name: Tag Docker image (commit SHA)
        run: docker tag my-echo-app:latest ${{ env.REPO }}:${{ env.SHA_TAG }}

      - name: Push Docker image to ECR (latest)
        run: docker push ${{ env.REPO }}:latest

      - name: Push Docker image to ECR (commit SHA)
        run: docker push ${{ env.REPO }}:${{ env.SHA_TAG }}